{
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "jsx": true,
    "useJSXTextNode": true,
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "prettier", "react-hooks", "simple-import-sort", "import"],
  "env": {
    "browser": true,
    "jasmine": true,
    "jest": true
  },
  "rules": {
    "jsx-quotes": [2, "prefer-double"],
    "no-console": 2,
    "comma-dangle": [
      2, {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "never"
      }
    ],
    "max-len": [
      2,
      {
        "code": 120,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages. (Things that start with a letter (or digit or underscore), or `@` followed by a letter.)
          ["^@?\\w"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.s?css$"],
          // Side effect imports. eg: import './style.css'
          ["^\\u0000"]
        ]
      }
    ],
    "sort-imports": "off",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-unused-vars": [
      2,
      {
        "args": "all",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/ban-ts-comment": 1,
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "snake_case"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "variable",
        "types": ["function"],
        "format": ["PascalCase", "camelCase"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "snake_case"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "property",
        "format": ["camelCase", "PascalCase", "snake_case"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["camelCase", "UPPER_CASE"]
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/no-empty-interface": 2,
    "@typescript-eslint/no-misused-new": 2,
    "@typescript-eslint/no-namespace": 2,
    "@typescript-eslint/no-parameter-properties": 0,
    "@typescript-eslint/no-this-alias": 2,
    "@typescript-eslint/no-use-before-declare": 0,
    "@typescript-eslint/no-var-requires": 2,
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/prefer-for-of": 2,
    "@typescript-eslint/prefer-function-type": 2,
    "@typescript-eslint/prefer-interface": 0,
    "@typescript-eslint/prefer-namespace-keyword": 2,
    "@typescript-eslint/type-annotation-spacing": 2,
    "@typescript-eslint/unified-signatures": 2,
    "react/prop-types": 0,
    "react-hooks/rules-of-hooks": 0,
    "react-hooks/exhaustive-deps": 1,
    "react/display-name": 0,
    "react/no-unescaped-entities": 2,
    "prettier/prettier": [
      2,
      {
        "trailingComma": "es5",
        "singleQuote": true,
        "semi": true,
        "printWidth": 120,
        "arrowParens": "always"
      }
    ]
  },
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "globals": {
    "module": true,
    "global": true,
    "window": true,
    "process": true,
    "Promise": true
  }
}
